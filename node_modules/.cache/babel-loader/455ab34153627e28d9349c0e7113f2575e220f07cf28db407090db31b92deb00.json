{"ast":null,"code":"var _jsxFileName = \"/Users/angelax/Angela/website/site/src/components/VoxelPage.js\";\nimport \"./style/General.css\";\nimport \"./style/ProjectPage.css\";\nimport \"./style/VoxelPage.css\";\nimport NavBar from \"./NavBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VoxelPage = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"header-bracket\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" VOXEL CARVING \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" June 2022 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Python \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"content\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Voxel Carving is a project I worked on in the beginning of Summer 2022. I decided to try this project because I worked on 3D reconstruction for my final project in Computer Vision and wanted to expand a bit more. For that final project, my group and I used depth cameras (the Kinect V2 and the iPhone depth camera) in order to reconstruct ourselves and our professor. To learn a bit more on this topic, I decided to try out a different technique which lead me to voxel carving.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"bracket\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"DATA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"content\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"The 'dino' data set contains images of a plaster dinosaur (stegosaurus), and the 'temple' data set contains images of a plaster reproduction of the Temple of Dioskouroi. Both data sets are taken from the \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://vision.middlebury.edu/mview/data/\",\n              children: \"Vision Department at Middlebury\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 44\n          }, this), \". The images were taken using the \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"http://graphics.stanford.edu/projects/gantry/\",\n              children: \"Stanford Spherical Gantry\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 63\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 57\n          }, this), \". Each data set contained images as well as .txt file with the camera calibration information corresponding to each image. Additionally, the bounding box information for each data set is contained within the README for that particular data set.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"bracket\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"IMPLEMENTATION DETAILS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"I started this project by reading about voxel carving and it's process using these resources:\", /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"resources\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"https://www.cs.toronto.edu/~kyros/pubs/00.ijcv.carve.pdf\",\n                children: \"A Theory of Shape Carving\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 35\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"http://www.cs.cmu.edu/~seitz/course/Sigg00/slides/seitz-voxel.pdf\",\n                children: \"From Image to Voxels Lecture Slides\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 35\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"https://web.stanford.edu/class/cs231a/course_notes/05-active-volumetric-stereo.pdf\",\n                children: \"Active and Volumetric Stereo Lecture Notes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 35\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"After reading about voxel carving and it's process, I decided the best way to approach writing the code was to split it into sections - extracting silhouettes, calculating projection matrices, generating the initial voxel grid, and carving.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \" Silhouettes \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"I started by extracting silhouettes. In order to do this, I first converted the image to gray scale, then blur the image, and finally extracted the silhouette. Each silhouette is represented as an array, and the silhouettes of all images are stored in a numpy array.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \" Projection Matrices \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Next, I calculated the projection matrices. Each camera's calibration information is provided in .txt file. A camera's projection matrix is calculated by multiplying the camera's intrinsic matrix with the camera's extrinsic matrix. I stored all the projection matrices in a numpy array where each projection matrix corresponds to each silhouette in the array of silhouettes. The projection matrix is as follows:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"row\",\n          id: \"projection-matrix\",\n          children: [/*#__PURE__*/_jsxDEV(\"table\", {\n            class: \"matrix\",\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"f\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"x\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 38\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"s\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"x\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 38\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"f\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"y\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 38\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"y\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 38\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            class: \"matrix\",\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"r\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1, 1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 38\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"r\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1, 2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 38\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"r\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1, 3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 38\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"t\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 38\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"r\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"2, 1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 38\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"r\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"2, 2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 38\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"r\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"2, 3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 38\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"t\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 38\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"r\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"3, 1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 38\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"r\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"3, 2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 38\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"r\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"3, 3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 38\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"t\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 38\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \" Initial Voxel Grid \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Once I calculated the projection matrices, I then created and displayed the inital grid (based on the given bounding box information). I calculated the size of a voxel based on the approximate desired number of voxels and the bounding box information. To find the size of each voxel, I divided the volume of the bounding box by the approximate number of voxels to find the volume of each voxel. The size of the voxel is the cube root of the volume of a single voxel. From here, I calculated the coordinate point of each voxel and store it in a numpy array.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"figures\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"single-figure\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"../images/voxel_page/dino_grid.jpg\",\n              alt: \"dino grid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              class: \"caption\",\n              children: \"Voxel Grid For Dino\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"single-figure\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"../images/voxel_page/temple_grid.jpg\",\n              alt: \"temple grid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              class: \"caption\",\n              children: \"Voxel Grid For Temple\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \" Carving \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"In terms of the general carving process, for each voxel, I calculated the corresponding image coordinate. If the pixel lies in the silhouette, it's included in the final reconstruction, otherwise it's excluded. More specifically, for each voxel coordinate, I calculated the homogenous image coordinate for all images by multiplying the corresponding projection matrix with the homogenous voxel coordinate. Rather than using a for loop to iterate through each voxel, I performed these calculations using numpy arrays to improve speed. From here, I calculated the cartesian image coordinate by dividing the u and v coordinates by the w coordinate. Then, I removed any x coordinates greater than the width of the image and y coordinates greater than the height of the image. If the value at that particular image coordinate lies in the silhouette it gets counted, and if the count is greater than a threshold, then the voxel gets included in the final reconstruction. The threshold is currently set at 80% of the total number of images in the data set (I determined this from trial and error). I stored the final voxels in a numpy array and displayed the final reconstruction using Open3D.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"bracket\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"RESULTS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"figures\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"single-figure\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"../images/voxel_page/dino1.jpg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"single-figure\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"../images/voxel_page/dino2.jpg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              class: \"caption\",\n              children: \"Dino Reconstruction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"single-figure\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"../images/voxel_page/dino3.jpg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"row-figure\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"figures\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"single-figure\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"../images/voxel_page/temple1.jpg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"single-figure\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"../images/voxel_page/temple2.jpg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                class: \"caption\",\n                children: \"Temple Reconstruction\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"single-figure\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"../images/voxel_page/temple3.jpg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n_c = VoxelPage;\nexport default VoxelPage;\nvar _c;\n$RefreshReg$(_c, \"VoxelPage\");","map":{"version":3,"names":["NavBar","VoxelPage"],"sources":["/Users/angelax/Angela/website/site/src/components/VoxelPage.js"],"sourcesContent":["import \"./style/General.css\"\nimport \"./style/ProjectPage.css\"\nimport \"./style/VoxelPage.css\"\n\nimport NavBar from \"./NavBar\";\n\nconst VoxelPage = () => {\n    return (\n        <div className=\"page\">\n            <NavBar />\n\n            <div className=\"page-container\">\n                {/* Summary Section */}\n                <div id=\"header-bracket\">\n                    <h1> VOXEL CARVING </h1>\n                    <h2> June 2022 </h2>\n                    <h2> Python </h2>\n                </div>\n\n                <div class=\"content\">\n                    <p>\n                        Voxel Carving is a project I worked on in the beginning of Summer 2022. I decided to try this\n                        project because I worked on 3D reconstruction for my final project in Computer Vision and\n                        wanted to expand a bit more. For that final project, my group and I used depth cameras (the Kinect V2\n                        and the iPhone depth camera) in order to reconstruct ourselves and our professor. To learn a\n                        bit more on this topic, I decided to try out a different technique which lead me to voxel\n                        carving.\n                    </p>\n                </div>\n\n                {/* Data Section */}\n                <div class=\"bracket\">\n                    <h2>\n                        DATA\n                    </h2>\n                </div>\n\n                <div class=\"content\">\n                    <p>\n                        The 'dino' data set contains images of a plaster dinosaur (stegosaurus), and the 'temple'\n                        data set contains images of a plaster reproduction of the Temple of Dioskouroi. Both data sets\n                        are taken from the <span><a href=\"https://vision.middlebury.edu/mview/data/\">Vision Department at Middlebury</a></span>.\n                        The images were taken using the <span><a href=\"http://graphics.stanford.edu/projects/gantry/\">Stanford Spherical Gantry</a></span>.\n                        Each data set contained images as well as .txt file with the camera calibration information\n                        corresponding to each image. Additionally, the bounding box information for each data set is\n                        contained within the README for that particular data set.\n                    </p>\n                </div>\n\n                {/* Implementation Details Section */}\n                <div class=\"bracket\">\n                    <h2>\n                        IMPLEMENTATION DETAILS\n                    </h2>\n                </div>\n\n                <div class=\"content\">\n                    <p>\n                        I started this project by reading about voxel carving and it's process using these resources:\n                        <p id=\"resources\">\n                            <span><a href=\"https://www.cs.toronto.edu/~kyros/pubs/00.ijcv.carve.pdf\">A Theory of Shape Carving</a></span>\n                            <span><a href=\"http://www.cs.cmu.edu/~seitz/course/Sigg00/slides/seitz-voxel.pdf\">\n                                From Image to Voxels Lecture Slides\n                            </a></span>\n                            <span><a href=\"https://web.stanford.edu/class/cs231a/course_notes/05-active-volumetric-stereo.pdf\">\n                                Active and Volumetric Stereo Lecture Notes\n                            </a></span>\n                        </p>\n                        <p>\n                            After reading about voxel carving and it's process, I decided the\n                            best way to approach writing the code was to split it into sections - extracting silhouettes,\n                            calculating projection matrices, generating the initial voxel grid, and carving.\n                        </p>\n                    </p>\n\n                    <h3> Silhouettes </h3>\n                    <p>\n                        I started by extracting silhouettes. In order to do this, I first converted the image to\n                        gray scale, then blur the image, and finally extracted the silhouette. Each silhouette is\n                        represented as an array, and the silhouettes of all images are stored in a numpy array.\n                    </p>\n\n                    <h3> Projection Matrices </h3>\n                    <p>\n                        Next, I calculated the projection matrices. Each camera's calibration information is provided\n                        in .txt file. A camera's projection matrix is calculated by multiplying the camera's\n                        intrinsic matrix with the camera's extrinsic matrix. I stored all the projection matrices in a\n                        numpy array where each projection matrix corresponds to each silhouette in the array of silhouettes.\n                        The projection matrix is as follows:\n                    </p>\n                    <div class=\"row\" id=\"projection-matrix\">\n                        <table class=\"matrix\">\n                            <tr>\n                                <td>f<sub>x</sub></td>\n                                <td>s</td>\n                                <td>x<sub>0</sub></td>\n                            </tr>\n                            <tr>\n                                <td>0</td>\n                                <td>f<sub>y</sub></td>\n                                <td>y<sub>0</sub></td>\n                            </tr>\n                            <tr>\n                                <td>0</td>\n                                <td>0</td>\n                                <td>1</td>\n                            </tr>\n                        </table>\n                        <table class=\"matrix\">\n                            <tr>\n                                <td>r<sub>1, 1</sub></td>\n                                <td>r<sub>1, 2</sub></td>\n                                <td>r<sub>1, 3</sub></td>\n                                <td>t<sub>1</sub></td>\n                            </tr>\n                            <tr>\n                                <td>r<sub>2, 1</sub></td>\n                                <td>r<sub>2, 2</sub></td>\n                                <td>r<sub>2, 3</sub></td>\n                                <td>t<sub>2</sub></td>\n                            </tr>\n                            <tr>\n                                <td>r<sub>3, 1</sub></td>\n                                <td>r<sub>3, 2</sub></td>\n                                <td>r<sub>3, 3</sub></td>\n                                <td>t<sub>3</sub></td>\n                            </tr>\n                        </table>\n                    </div>\n\n                    <h3> Initial Voxel Grid </h3>\n                    <p>\n                        Once I calculated the projection matrices, I then created and displayed the inital grid\n                        (based on the given bounding box information). I calculated the size of a voxel based on the\n                        approximate desired number of voxels and the bounding box information. To find the size of each\n                        voxel, I divided the volume of the bounding box by the approximate number of voxels to find\n                        the volume of each voxel. The size of the voxel is the cube root of the volume of a single\n                        voxel. From here, I calculated the coordinate point of each voxel and store it in a numpy array.\n                    </p>\n\n                    <div class=\"figures\">\n                        <div class=\"single-figure\">\n                            <img src=\"../images/voxel_page/dino_grid.jpg\" alt=\"dino grid\" />\n                            <p class=\"caption\">Voxel Grid For Dino</p>\n                        </div>\n                        <div class=\"single-figure\">\n                            <img src=\"../images/voxel_page/temple_grid.jpg\" alt=\"temple grid\" />\n                            <p class=\"caption\">Voxel Grid For Temple</p>\n                        </div>\n                    </div>\n\n                    <h3> Carving </h3>\n                    <p>\n                        In terms of the general carving process, for each voxel, I calculated the corresponding image\n                        coordinate. If the pixel lies in the silhouette, it's included in the final reconstruction,\n                        otherwise it's excluded. More specifically, for each voxel coordinate, I calculated the\n                        homogenous image coordinate for all images by multiplying the corresponding projection matrix\n                        with the homogenous voxel coordinate. Rather than using a for loop to iterate through each voxel,\n                        I performed these calculations using numpy arrays to improve speed. From here, I calculated the\n                        cartesian\n                        image coordinate by\n                        dividing the u and v coordinates by the w coordinate. Then, I removed any x coordinates greater\n                        than the width of the image and y coordinates greater than the height of the image. If\n                        the value at that particular image coordinate lies in the silhouette it gets counted, and if\n                        the count is greater than a threshold, then the voxel gets included in the final\n                        reconstruction. The threshold is currently set at 80% of the total number of images in the\n                        data set (I determined this from trial and error). I stored the final voxels in a numpy array and\n                        displayed the final reconstruction using Open3D.\n                    </p>\n                </div>\n\n                {/* Results Section */}\n                <div class=\"bracket\">\n                    <h2>\n                        RESULTS\n                    </h2>\n                </div>\n\n                <div class=\"content\">\n                    <div class=\"figures\">\n                        <div class=\"single-figure\">\n                            <img src=\"../images/voxel_page/dino1.jpg\" />\n                        </div>\n                        <div class=\"single-figure\">\n                            <img src=\"../images/voxel_page/dino2.jpg\" />\n                            <p class=\"caption\">\n                                Dino Reconstruction\n                            </p>\n                        </div>\n                        <div class=\"single-figure\">\n                            <img src=\"../images/voxel_page/dino3.jpg\" />\n                        </div>\n                    </div>\n\n                    <div class=\"row-figure\">\n                        <div class=\"figures\">\n                            <div class=\"single-figure\">\n                                <img src=\"../images/voxel_page/temple1.jpg\" />\n                            </div>\n                            <div class=\"single-figure\">\n                                <img src=\"../images/voxel_page/temple2.jpg\" />\n                                <p class=\"caption\">\n                                    Temple Reconstruction\n                                </p>\n                            </div>\n                            <div class=\"single-figure\">\n                                <img src=\"../images/voxel_page/temple3.jpg\" />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default VoxelPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}